<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--定义属性及读取属性文件-->
    <properties resource="db.properties"/>

    <!--配置sql打印-->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>

        <!--懒加载 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。
        特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态。-->
       <setting name="lazyLoadingEnabled" value="true"/>

        <!--当开启时(true)，任何方法的调用都会加载该对象的所有属性。默认值为Flase-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--指定哪个对象的方法触发一次延迟加载。
    由于System.out.println(order)调用了查询出来的对象的toString方法，
    所以触发了一次懒加载-->
    <!--setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>-->

    <!-- spring整合后 environments配置将废除 使用spring中的连接池 -->
    <environments default="development">
        <environment id="development">
            <!-- 使用jdbc事务管理 -->
            <transactionManager type="JDBC" />
            <!-- 数据库连接池 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url"
                          value="${jdbc.url}" />
                <property name="username" value="root" />
                <property name="password" value="password" />
            </dataSource>
        </environment>
    </environments>
    <!--加载映射文件-->
    <mappers>
        <!--<mapper resource="domain/Customer"></mapper>-->
        <!--
            1.名称必须得要和接口名称一致
            2.必须和mapper接口在同一目录
        -->
        <!--<mapper class="mapper.CustomerMapper"/>-->
        <package name="mapper"/>
    </mappers>
</configuration>